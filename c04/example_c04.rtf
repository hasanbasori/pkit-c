{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red251\green0\blue7;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c100000\c12195\c0;\csgray\c0;}
\margl1440\margr1440\vieww19480\viewh16580\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \CocoaLigature0 // c04 ex00\cf3 \
#include <stdio.h>\
\
Int ft_strlen(char *str)\
\{\
	int	I;\
\
	i = 0;\
	while (str[i] != '\\0')\
    \{\
        i++;\
    \}\
    return (i);\
\}\
\cf2 ==============================\
// c04 ex01\cf3 \
#include <stdio.h>\
\
Int ft_putstr(char *str)\
\{\
	int	I;\
\
	i = 0;\
	while (str[i] != '\\0')\
    \{\
        write(1, &str[i], 1);\
    \}\
\}\
\cf2 ==============================\
// c04 ex02\
\cf3 \
#include <stdio.h>\
\
void put_char(char *str, int c, char n)\
\{\
    while (c > 0)\
    \{\
        str[c] = str[c-1];\
        c--;\
    \}\
    str[0] = n;\
    \
\}\
\
void put_nbr(int nb, char *res, int neg)\
\{\
    int c;\
    int tmp;\
    \
    if(neg)\
        res[0] = -1*(nb % 10) +'0';\
    else\
        res[0] = ( nb & 10 ) +'0';\
    c = 1;\
    nb /= 10;\
    if (neg)\
        nb *=1;\
    while (nb >0)\
    \{\
        tmp = (nb % 10) + '0';\
        put_char(res, c++, tmp);\
        nb /= 10;\
    \}\
    if (neg)\
        put_char(res, c++, '-');\
    write(1, res, c);\
    \
\}\
\
\
void ft_putnbr(int nb)\
\{\
    charres[11];\
    int neg;\
    \
    neg = nb < 0;\
    if (nb <10 && nb >-10)\
    \{\
        if (neg)\
        \{\
            nb*=-1\
            res[0] = '-''\
            res[1] = (nb %10) + '0';\
            write(1, res, 2);\
            return;\
        \}\
        res[0] = (nb % 10) +'0';\
        write(1, res, 1);\
        return;\
    \}\
    put_nbr(nb,res, neg);\
\}\
\
\cf2 ==============================\
// c04 ex03\cf3 \
//\
\
\
int is_space(char c)\
\{\
    if ( c == ' ' || c == '\\f' || c == '\\n')\
        return (1);\
    if ( c == '\\r' || c == '\\t' || c == '\\v')\
        return (1);\
    return (0);    \
\}\
\
int is_num(char c)\
\{\
    return (c <='9' && c >= '0');\
\}\
\
int ft_atoi(char *str)\
\{\
    int i;\
    int res;\
    int neg;\
    \
    i = 0;\
    res = 0;\
    neg = 0;\
    while (is_space(str[i]) && str[i] !='\\0')\
        i++\
    while( (str[i] =='-' || str[i] == '+') && str[i] != '\\0')\
        if (str[i++] =='-')\
            neg++;\
    while (is_num(str[i]) && str[i] != '\\0')\
    \{\
        res *= 10;\
        res += (str[i++] - '0');\
    \}\
    if (neg % 2 == 0)\
    return (res);\
    return(res * -1);\
\}\
\
\
\
\
\
\
\
\
}