{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red251\green0\blue7;\red25\green60\blue255;
}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c100000\c12195\c0;\cssrgb\c12594\c35385\c100000;
}
\margl1440\margr1440\vieww19480\viewh16580\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \CocoaLigature0 Last login: Thu Aug  3 12:03:55 on ttys000\
kdanchal@z2t10c2 c05 % \cf3 cat ex00/ft_iterative_factorial.c \cf2 \
/* ************************************************************************** */\
/*                                                                            */\
/*                                                        :::      ::::::::   */\
/*   ft_iterative_factorial.c                           :+:      :+:    :+:   */\
/*                                                    +:+ +:+         +:+     */\
/*   By: kdanchal <marvin@42.fr>                    +#+  +:+       +#+        */\
/*                                                +#+#+#+#+#+   +#+           */\
/*   Created: 2023/08/01 13:44:20 by kdanchal          #+#    #+#             */\
/*   Updated: 2023/08/01 19:00:21 by kdanchal         ###   ########.fr       */\
/*                                                                            */\
/* ************************************************************************** */\
\
#include <unistd.h>\
\
int	ft_iterative_factorial(int nb)\
\{\
	int	a;\
	int	result;\
\
	a = 1;\
	result = 1;\
	if (nb < 0)\
		return (0);\
	if (nb == 0)\
		return (1);\
	if (nb > 0)\
		while (a++ < nb)\
			result = a * result;\
	else\
		result = 0;\
	return (result);\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf4 \CocoaLigature1 int main()\
\{\
    int nb;\
    printf("Result = %d\\n " ,ft_iterative_factorial(5)  );\
    \
\}\cf0 \
\

\f0\fs28 \cf2 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
kdanchal@z2t10c2 c05 % \cf3 cat ex01/ft_recursive_factorial.c \cf2 \
/* ************************************************************************** */\
/*                                                                            */\
/*                                                        :::      ::::::::   */\
/*   ft_recursive_factorial.c                           :+:      :+:    :+:   */\
/*                                                    +:+ +:+         +:+     */\
/*   By: kdanchal <marvin@42.fr>                    +#+  +:+       +#+        */\
/*                                                +#+#+#+#+#+   +#+           */\
/*   Created: 2023/08/01 13:52:36 by kdanchal          #+#    #+#             */\
/*   Updated: 2023/08/01 13:57:53 by kdanchal         ###   ########.fr       */\
/*                                                                            */\
/* ************************************************************************** */\
\
#include <unistd.h>\
\
int	ft_recursive_factorial(int nb)\
\{\
	if (nb < 0)\
		return (0);\
	if (nb == 1 || nb == 0)\
		return (1);\
	else\
		return (nb * ft_recursive_factorial(nb - 1));\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf4 \CocoaLigature1 int main()\
\{\
    \
    printf("%d" , ft_recursive_factorial(4)  );\
\}\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \CocoaLigature0 \
\
\
kdanchal@z2t10c2 c05 %\cf3  cat ex02/ft_iterative_power.c \cf2 \
/* ************************************************************************** */\
/*                                                                            */\
/*                                                        :::      ::::::::   */\
/*   ft_iterative_power.c                               :+:      :+:    :+:   */\
/*                                                    +:+ +:+         +:+     */\
/*   By: kdanchal <marvin@42.fr>                    +#+  +:+       +#+        */\
/*                                                +#+#+#+#+#+   +#+           */\
/*   Created: 2023/08/01 15:24:08 by kdanchal          #+#    #+#             */\
/*   Updated: 2023/08/01 18:31:26 by kdanchal         ###   ########.fr       */\
/*                                                                            */\
/* ************************************************************************** */\
\
#include <unistd.h>\
\
int	ft_iterative_power(int nb, int power)\
\{\
	int	a;\
	int	b;\
	int	result;\
\
	a = 0;\
	b = nb;\
	result = 1;\
	if (power == 0 && nb == 0)\
		result = 1;\
	else if (power < 0)\
		result = 0 ;\
	while (a < power)\
	\{\
		result = b * result;\
		a++;\
	\}\
	return (result);\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf4 \CocoaLigature1 int main()\
\{\
    printf("%d\\n " ,ft_iterative_power(1,0  ) );\
\}\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \CocoaLigature0 \
kdanchal@z2t10c2 c05 % cat \cf3 ex03/ft_recursive_power.c \cf2 \
/* ************************************************************************** */\
/*                                                                            */\
/*                                                        :::      ::::::::   */\
/*   ft_recursive_power.c                               :+:      :+:    :+:   */\
/*                                                    +:+ +:+         +:+     */\
/*   By: kdanchal <marvin@42.fr>                    +#+  +:+       +#+        */\
/*                                                +#+#+#+#+#+   +#+           */\
/*   Created: 2023/08/01 14:27:27 by kdanchal          #+#    #+#             */\
/*   Updated: 2023/08/01 16:14:10 by kdanchal         ###   ########.fr       */\
/*                                                                            */\
/* ************************************************************************** */\
\
#include <unistd.h>\
\
int	ft_recursive_power(int nb, int power)\
\{\
	int	a;\
	int	result;\
\
	a = 1;\
	result = nb;\
	if (nb == 0)\
		result = 0;\
	if (power == 0)\
		result = 1;\
	else if (power < 0)\
		result = 0;\
	while (a < power)\
	\{\
		result = nb * ft_recursive_power(nb, power - 1);\
		a++;\
	\}\
	return (result);\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1 \cf4 \CocoaLigature1 int main()\
\{\
    printf("%d\\n " ,
\f2\fs24 \expnd0\expndtw0\kerning0
ft_recursive_power
\f1\fs28 \kerning1\expnd0\expndtw0 (2,-3)   );\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0 \cf2 \CocoaLigature0 \
\
kdanchal@z2t10c2 c05 % cat \cf3 ex04/ft_fibonacci.c \cf2 \
/* ************************************************************************** */\
/*                                                                            */\
/*                                                        :::      ::::::::   */\
/*   ft_fibonacci.c                                     :+:      :+:    :+:   */\
/*                                                    +:+ +:+         +:+     */\
/*   By: kdanchal <marvin@42.fr>                    +#+  +:+       +#+        */\
/*                                                +#+#+#+#+#+   +#+           */\
/*   Created: 2023/08/01 14:39:40 by kdanchal          #+#    #+#             */\
/*   Updated: 2023/08/01 18:31:58 by kdanchal         ###   ########.fr       */\
/*                                                                            */\
/* ************************************************************************** */\
\
#include <unistd.h>\
\
int	ft_fibonacci(int index)\
\{\
	int	c;\
\
	c = 0;\
	if (index < 0)\
		return (-1);\
	else if (index == 0)\
		return (0);\
	else if (index == 1 || index == 2)\
		return (1);\
	else\
		return (ft_fibonacci(index - 1) + ft_fibonacci(index - 2));\
	return (c);\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf4 \CocoaLigature1 int main(void)\
\{\
   printf("%d",  ft_fibonacci(6));\
\}\
\

\f0\fs28 \cf2 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
kdanchal@z2t10c2 c05 % \cf3 cat ex05/ft_sqrt.c \cf2 \
/* ************************************************************************** */\
/*                                                                            */\
/*                                                        :::      ::::::::   */\
/*   ft_sqrt.c                                          :+:      :+:    :+:   */\
/*                                                    +:+ +:+         +:+     */\
/*   By: kdanchal <marvin@42.fr>                    +#+  +:+       +#+        */\
/*                                                +#+#+#+#+#+   +#+           */\
/*   Created: 2023/08/01 14:49:16 by kdanchal          #+#    #+#             */\
/*   Updated: 2023/08/01 18:32:28 by kdanchal         ###   ########.fr       */\
/*                                                                            */\
/* ************************************************************************** */\
\
#include <unistd.h>\
\
int	ft_sqrt(int nb)\
\{\
	int	b;\
	int	i;\
	int	ans;\
	int	c;\
\
	b = 0;\
	b = nb / 2;\
	i = 2;\
	if (nb == 1)\
	\{\
		return (1);\
	\}\
	while (i < b)\
	\{\
		ans = nb % i;\
		if (ans == 0)\
		\{\
			c = i * i;\
			if (c == nb)\
				return (i);\
		\}\
		i++;\
	\}\
	return (0);\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf4 \CocoaLigature1 int main(void)\
\{\
    printf ("%d", ft_sqrt (121) );\
    \
\}
\f0\fs28 \cf2 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
kdanchal@z2t10c2 c05 % \cf3 cat ex06/ft_is_prime.c \cf2 \
/* ************************************************************************** */\
/*                                                                            */\
/*                                                        :::      ::::::::   */\
/*   ft_is_prime.c                                      :+:      :+:    :+:   */\
/*                                                    +:+ +:+         +:+     */\
/*   By: kdanchal <marvin@42.fr>                    +#+  +:+       +#+        */\
/*                                                +#+#+#+#+#+   +#+           */\
/*   Created: 2023/08/01 18:10:28 by kdanchal          #+#    #+#             */\
/*   Updated: 2023/08/01 18:27:49 by kdanchal         ###   ########.fr       */\
/*                                                                            */\
/* ************************************************************************** */\
\
#include <unistd.h>\
\
int	ft_is_prime(int nb)\
\{\
	int	ans;\
	int	check;\
\
	check = 2;\
	if (nb <= 1)\
		return (0);\
	while (check < nb)\
	\{\
		ans = nb % check;\
		if (ans == 0)\
			return (0);\
		check++;\
	\}\
	return (1);\
\}\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf4 \CocoaLigature1 int main(void) \
\{\
    printf( "print 1 if cha por \\n");\
    printf( "%d" ,ft_is_prime( 0 )  );\
\
\}\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \CocoaLigature0 kdanchal@z2t10c2 c05 % \
}