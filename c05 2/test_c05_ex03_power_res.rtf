{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0;}
\margl1440\margr1440\vieww20660\viewh13700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs30 \cf3 \CocoaLigature0 #includes <unistd.h>\
\
int	ft_recursive_power(int nb, int power)\
\{\
	int	a;\
	int	result;\
\
	a = 1;\
	result = nb;\
	if (power == 0 && nb == 0)\
		result = 1;\
	else if (power < 0)\
		result = 1;\
	while (a < power)\
	\{\
		result = nb * ft_recursive_power(nb, power - 1);\
		a++;\
	\}\
	return (result);\
\}\
\

\f0\fs28 \cf0 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 int main()\
\{\
    printf("%d\\n " ,
\f2\fs24 \cf2 \expnd0\expndtw0\kerning0
ft_recursive_power
\f0\fs28 \cf0 \kerning1\expnd0\expndtw0 (2,-3)   );\
\}}